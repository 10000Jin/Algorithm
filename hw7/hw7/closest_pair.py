
import math
import time

def distance(p1, p2):
    return math.sqrt((p1[0]-p2[0])**2 + (p1[1]-p2[1])**2)


def closest_pair(p):
    n = len(p)
    mindist = float("inf")
    for i in range(n-1):
        for j in range(i+1, n):
            dist = distance(p[i], p[j])
            if dist < mindist:
                mindist = dist
    return mindist


#p = [(2, 3), (12, 30), (40, 50)]
#p = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4)]
#p = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4), (4, 3), (37, 41), (24, 41)]
#p = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4), (4, 3), (37, 41), (24, 41), (52, 3), (11, 63), (22, 12)]
#p = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4), (4, 3), (37, 41), (24, 41), (52, 3), (11, 63), (22, 12), (4, 6), (11, 44), (6, 1)]
p = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4), (4, 3), (37, 41), (24, 41), (52, 3), (11, 63), (22, 12), (4, 6), (11, 44), (6, 1), (14, 71), (52, 22), (33, 51)]

print("################억지기법################")
print("n = ", len(p))
print("가장 가까운 두 점의 거리", closest_pair(p))

start = time.time()
for i in range(300000):
    closest_pair(p)
end = time.time()
print("실행시간(30만회 반복) : %f초" % (end-start))

